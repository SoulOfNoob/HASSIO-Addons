#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the example service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================

# Add your code here

# # Declare variables
# declare message
declare CMD
declare OMADA_DIR
declare OMADA_PERSIST

# ## Get the 'message' key from the user config options.
# message=$(bashio::config 'message')
OMADA_DIR="/opt/tplink/EAPController"
OMADA_PERSIST="/share/omada"

CMD="/usr/bin/java -server -Xms128m -Xmx1024m -XX:MaxHeapFreeRatio=60 -XX:MinHeapFreeRatio=30 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${OMADA_PERSIST}/logs/java_heapdump.hprof -Djava.awt.headless=true -cp ${OMADA_DIR}/lib/*::${OMADA_DIR}/properties: com.tplink.smb.omada.starter.OmadaLinuxMain"

## Print the message the user supplied, defaults to "Hello World..."
# bashio::log.info "[run] ${message:="Hello World..."}"
bashio::log.info "[run] Hello World..."

## Run your program
# exec my_program --with-params

# check to see if there is a db directory; create it if it is missing
bashio::log.info "[run] Start"
# ------------------------------------
if [ ! -d "${OMADA_PERSIST}" ]
then
    bashio::log.info "[run] omada deirectory missing; running 'init.sh'"
    /init.sh ${OMADA_DIR} ${OMADA_PERSIST}
fi
# ------------------------------------
bashio::log.info "[run] Fix permissions"
/fixpermissions.sh
# ------------------------------------
bashio::log.info "[run] Remove Dirs"
rm -rf ${OMADA_DIR}/data
rm -rf ${OMADA_DIR}/work
rm -rf ${OMADA_DIR}/logs
# ------------------------------------
bashio::log.info "[run] Create symlinks"
ln -sf ${OMADA_PERSIST}/data ${OMADA_DIR}/data
ln -sf ${OMADA_PERSIST}/work ${OMADA_DIR}/work
ln -sf ${OMADA_PERSIST}/logs ${OMADA_DIR}/logs
# ------------------------------------
bashio::log.info "[run] Symlink permissions"
chown -h omada:omada ${OMADA_DIR}/data
chown -h omada:omada ${OMADA_DIR}/work
chown -h omada:omada ${OMADA_DIR}/logs
# ------------------------------------
bashio::log.info "[run] List"
ls -al ${OMADA_DIR}
# ------------------------------------
bashio::log.info "[run] Starting Controller"
cd ${OMADA_DIR}/lib
/entrypoint.sh ${CMD}
# exec gosu omada ${CMD}
# ------------------------------------
bashio::log.info "[run] Done"